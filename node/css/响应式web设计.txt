1. <meta name = "viewport" content = "width=device-width, initial-scale=1.0">， 这段代码有什么用？
  meta标签用于为页面的内容提供额外的信息，还能给浏览器下达额外的指令，说明如何显示页面。
  viewport：指代浏览器的显示内容，内容在不同的设备中会有不同的显示效果，在小屏幕的手机上页面内容会变得更小。这个标签有助于在不同设备中，控制如何显示页面内容。
  width=device-width：将页面宽度设置为设备屏幕宽度，一般情况下，当页面比较大时，手机浏览器会缩小页面以便在手机上显示整个页面，但当设置了这个属性之后，就告诉手机浏览器不要进行缩小页面，让页面的宽度匹配手机的真实宽度。
  initial-0：(sets the initial zoom level of the webpage when it's loaded.) 当页面被加载时，初始化缩放级别。

2. 媒体查询（media query）
  它主要是根据目标浏览器的宽度和高度为页面提供不同的样式。首先，为主流的屏幕大小设置不同的样式，然后使用media属性判断设备的分辨率，使用对应的样式表。
  如何创建媒体查询：
    法1：使用link标签为不同尺寸的屏幕加载不同的样式表：
      <link href="css/small.css" rel="stylesheet" media="(max-width: 480px)">：当设备的宽度>=480px时，就应用该样式表
    法2：使用import指令将媒体查询写入一个样式表中：
      @import url(css/small.css) (max-width: 480px)：当设备的宽度>=480px时，就应用该样式表
        必须把@import指令放在样式表的开头，不能放在任何样式表的后面。如果不这样做，可能会出现层叠问题，即在另一个外部样式表中定义，然后使用@import指令加载的样式表，可能被、
        样式表中后面的样式覆盖。这个问题有一个简单地解决方法：专门使用一个外部样式表保存@import指令，第一个指令加载所有设备通用的基础样式表，其他指令使用媒体查询加载样式表。
    法3：在样式表中嵌入媒体查询：
      @media(max-width: 480px) {
        body{
          /* 样式属性 */
        }
      }
